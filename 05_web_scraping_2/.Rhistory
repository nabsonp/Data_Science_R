x = c(2)/
demo()
x = c(4)
x = c(1,2,3)
y = c(3,4,2,2)
tabela_artigo_manipuladores <- read.csv("~/Documentos/UFAM/4º período/ICD/tabela_artigo_manipuladores.csv")
View(tabela_artigo_manipuladores)
tabela_artigo_manipuladores <- read.delim("~/Documentos/UFAM/4º período/ICD/tabela_artigo_manipuladores.csv", comment.char="#")
View(tabela_artigo_manipuladores)
View(tabela_artigo_manipuladores)
df <- tabela_artigo_manipuladores
cor(df)
x = df[,4:6]/apply(df[,4:6],1,SUM) # matriz[<linhas>,<colunas>]
x = df[,4:6]/apply(df[,4:6],1,sum) # matriz[<linhas>,<colunas>]
df2 = cbind(df[,2:3],x,df[,7]) # concatena matriz em colunas
# i:j = [i, ..., j]
# apply(<matriz>,<linha=1/coluna=2>,<funcao>)
df2 = cbind(df[,2:3],x,PACHS = df[,7]) # concatena matriz em colunas
x
# i:j = [i, ..., j]
# apply(<matriz>,<linha=1/coluna=2>,<funcao>)
df2 = cbind(PCap = df[3]/df[,2],x,PACHS = df[,7]) # concatena matriz em colunas
df
# i:j = [i, ..., j]
# apply(<matriz>,<linha=1/coluna=2>,<funcao>)
df2 = cbind(PCap = df[3]/df[,2],x,PACHS = df[,6]) # concatena matriz em colunas
df2
cor(df2)
plot(df2[,1],df2[,4],pch=19,cex=2)
plot(df2[,3],df2[,1],pch=19,cex=2) # plota o gráfico de dispersão
plot(df2[,3],df2[,1],pch=1,cex=2) # plota o gráfico de dispersão
plot(df2[,3],df2[,1],pch=19,cex=2) # plota o gráfico de dispersão
plot(df2[,3],df2[,1],pch=19,cex=1) # plota o gráfico de dispersão
library(rvest)
url = "https://www.boticario.com.br/maquiagem"
page = read_html(url)
node = html_nodes(page,"//div//div//div//div/div")
node = html_nodes(page,xpath="//div//div//div//div/div")
node
html_text(node)
node = html_nodes(page,xpath="/html/body/div[2]/div/div[1]/div/div[3]/div[4]/section/div[2]/div/div[5]/div[1]/div/div/div/div[8]/div/div[3]/h3/a")
html_text(node)
node
html_text(node)
node = html_nodes(page,xpath="//html//body//div[2]//div//div[1]//div//div[3]//div[4]//section//div[2]//div//div[5]//div[1]//div//div//div//div[8]//div//div[3]//h3//a")
html_text(node)
node
node = html_nodes(page,xpath="//section//div[2]//div//div[5]//div[1]//div//div//div//div[8]//div//div[3]//h3//a")
html_text(node)
node
node = html_nodes(page,xpath="//div//div[8]//div//div[3]//h3//a")
html_text(node)
node = html_nodes(page,xpath="//div//div//div//div[3]//h3//a")
html_text(node)
node = html_nodes(page,xpath="//div//div//div//div")
html_text(node)
node
node = html_nodes(page,xpath="//div//div//div//div//div")
html_text(node)
node = html_nodes(page,xpath="//div//div//div//div//div//h3")
html_text(node)
node = html_nodes(page,xpath="//div//div//div//div//div//")
node = html_nodes(page,xpath="//div//div//div//div//div")
html_text(node)
node
node = html_nodes(page,xpath="//div//div//div//div//div//a")
html_text(node)
node = html_nodes(page,xpath="//div//div//div//div//div//div//a")
html_text(node)
node = html_nodes(page,xpath="//div//div//div//div//div//h3")
html_text(node)
node = html_nodes(page,xpath="//h3")
html_text(node)
url = "~\\boticario.html"
page = read_html(url)
url = "/home/nabson/Documentos/UFAM/4º período/ICD/Aula 07/oticario.html"
page = read_html(url)
setwd("~/Documentos/UFAM/4º período/ICD/Aula 07")
url = "boticario.html"
page = read_html(url)
node = html_nodes(page,xpath="//h3")
html_text(node)
node
html_text(node)
node = html_nodes(page,xpath="/html/body/div[2]/div/div[1]/div/div[3]/div[4]/section/div[2]/div/div[5]/div[1]/div/div/div/div[8]/div/div[3]/h3/a")
html_text(node)
node = html_nodes(page,xpath="//div//div//div//div//div//h3")
html_text(node)
node = html_nodes(page,xpath="div//h3")
html_text(node)
node = html_nodes(page,xpath="//div//h3")
html_text(node)
node = html_nodes(page,xpath="//div//h3//a")
html_text(node)
node = html_nodes(page,xpath="/html/body/div[2]/div/div[1]/div/div[3]/div[4]/section/div[2]/div/div[5]/div[1]/div/div/div/div[4]/div/div[4]/div[1]")
price = html_text(node)
price
node = html_nodes(page,xpath="//div//div//div//div[4]//div//div[4]//div[1]")
price = html_text(node)
price
node = html_nodes(page,xpath="//div//div//div//div//div//div//div")
price = html_text(node)
price
node = html_nodes(page,xpath="div//div")
price = html_text(node)
price
node = html_nodes(page,css = "shelf-product-price")
price = html_text(node)
price
node = html_nodes(page,xpath="shelf-product-name")
prod = html_text(node)
prod
//div//h3//a
node = html_nodes(page,xpath="//div//h3//a")
prod = html_text(node)
node = html_nodes(page,css = ".shelf-product-price")
price = html_text(node)
price
node = html_nodes(page,xpath=".shelf-product-name")
node = html_nodes(page,css=".shelf-product-name")
prod = html_text(node)
node = html_nodes(page,css = ".shelf-product-price")
price = html_text(node)
page = read_html(url,encoding="utf-8")
node = html_nodes(page,css=".shelf-product-name") # Pega as tags da classe passada
prod = html_text(node)
node = html_nodes(page,css = ".shelf-product-price")
price = html_text(node)
price
df = data.frame(Product = NA, Price = NA)
df = rbind.data.frame(df,cbind.data.frame(Product = prod,Price = price))
View(df)
df = data.frame(Product = prod, Price = price)
# df = rbind.data.frame(df,cbind.data.frame(Product = prod,Price = price))
View(df)
page = read_html(url,encoding="utf-8")
node = html_nodes(page,css=".shelf-product-name") # Pega as tags da classe passada
prod = html_text(node)
node = html_nodes(page,css = ".shelf-product-price")
price = html_text(node)
price
df = data.frame(Product = prod, Price = price)
# df = rbind.data.frame(df,cbind.data.frame(Product = prod,Price = price))
View(df)
page = read_html(url,encoding="utf-8")
node = html_nodes(page,css=".shelf-product-name") # Pega as tags da classe passada
prod = html_text(node)
node = html_nodes(page,css = ".shelf-product-price")
price = html_text(node)
df = data.frame(Product = prod, Price = price)
# df = rbind.data.frame(df,cbind.data.frame(Product = prod,Price = price))
View(df)
prod[2]
prod[4]
page = read_html(url,encoding="utf-8")
node = html_nodes(page,css=".shelf-product-name") # Pega as tags da classe passada
prod = html_text(node)
prod = str_replace_all(prod,'\n','')
prod = str_replace_all(prod,'\r','')
node = html_nodes(page,css = ".shelf-product-price")
price = html_text(node)
df = data.frame(Product = prod, Price = price)
# df = rbind.data.frame(df,cbind.data.frame(Product = prod,Price = price))
View(df)
prod[4]
prod
node = html_nodes(page,css=".shelf-product-name") # Pega as tags da classe passada
prod = html_text(node)
prod = str_replace_all(prod,'\n','')
library(stringr)
page = read_html(url,encoding="utf-8")
node = html_nodes(page,css=".shelf-product-name") # Pega as tags da classe passada
prod = html_text(node)
prod = str_replace_all(prod,'\n','')
prod = str_replace_all(prod,'\r','')
node = html_nodes(page,css = ".shelf-product-price")
price = html_text(node)
df = data.frame(Product = prod, Price = price)
# df = rbind.data.frame(df,cbind.data.frame(Product = prod,Price = price))
View(df)
prod[4]
idtext   = grep("x", price)
idtext
idtext   = grep("x", price)-1
idtext
price = price[-idtext]
df = data.frame(Product = prod, Price = price)
price
idtext   = grep("x", price)
node = html_nodes(page,css = ".shelf-product-price")
price = html_text(node)
idtext   = grep("x", price)
price = price[idtext]
price
str_split(price,pattern="x")
str_split(price,pattern="x")[0]
str_split(price,pattern="x")[[0]]
str_split(price,pattern="x")
df[0]
df['Price']
str_split(df['Price'],pattern="x")
library(rvest)
library(stringr)
setwd("~/Documentos/UFAM/4º período/ICD/Aula 07")
url = "boticario.html"
page = read_html(url,encoding="utf-8")
node = html_nodes(page,css=".shelf-product-name") # Pega as tags da classe passada
prod = html_text(node)
prod = str_replace_all(prod,'\n','')
prod = str_replace_all(prod,'\r','')
node = html_nodes(page,css = ".shelf-product-price")
price = html_text(node)
str_split(price,pattern="x")
df = data.frame(Product = prod, Price = price)
View(df)
# Get product ID
node = html_nodes(page,css = ".offer-inner")
id = html_text(node)
id
id = html_attr(node)
df = data.frame(Product = prod, Price = price)
# Get product ID
node = html_name(page,xpath = "//div//div//like-button")
id = html_attr(node)
# Get product ID
node = html_nodes(page,xpath = "//div//div//like-button")
id = html_attrs(node)
id
id = html_attrs(node)[1]
id
id = html_attrs(node)[[1]]
id
id = simplify2array(id)
# Get product ID
node = html_nodes(page,xpath = "//div//div//like-button")
id = html_attrs(node) # Recebe os atributos da tag
id = simplify2array(id)
id
id = t(simplify2array(id))
id
id[1]
id = t(simplify2array(id))[,1]
id
# Get product ID
node = html_nodes(page,xpath = "//div//div//like-button")
id = t(simplify2array(html_attrs(node)))[,1] # Recebe os atributos da tag
id
df = data.frame(Id = id, Product = prod, Price = price)
View(df)
write.csv(df,file="Boticario.csv")
# Get product price
node = html_nodes(page,css = ".product__image")
image = html_text(node)
image
# Get product price
node = html_nodes(page,css = ".product__image>img")
image = html_text(node)
image
# Get product price
node = html_nodes(page,css = ".product__image>img")
image = html_text(node)
image
# Get product price
node = html_nodes(page,css = ".product_image>img")
image = html_text(node)
image
# Get product price
node = html_nodes(page,css = ".product__image>img")
image = t(simplify2array(html_attrs(node)))[,1] # Recebe os atributos da tag
image
t(simplify2array(html_attrs(node)))
html_attrs(node)
image = t(simplify2array(html_attrs(node)))[,'src'] # Recebe os atributos da tag
image
url = "~//boticario.html"
page = read_html(url,encoding="utf-8")
url = "boticario.html"
page = read_html(url,encoding="utf-8")
df['Id'][i]
df['Id'][0]
df['Id'][1]
df[1,'Id']
df[1,'Id']
# Create the DataFrame
df = data.frame(Id = id, Product = prod, Price = price,Img_url=image)
View(df)
df[1]
df['Id']
df[1,'Id']
# Donwload the images by the url
i=1
download.file(url=as.character(df[i,"Img_url"]),destfile = paste0(df[1,'Id'],".jpg"))
for (i in 1:nrow(df)) {
download.file(url=as.character(df[i,"Img_url"]),destfile = paste0(df[1,'Id'],".jpg"))
}
for (i in 1:nrow(df)) {
download.file(url=as.character(df[i,"Img_url"]),destfile = paste0(df[i,'Id'],".jpg"))
}
download.file(url=as.character(df[i,"Img_url"]),destfile = paste0("image_products",df[i,'Id'],".jpg"))
download.file(url=as.character(df[i,"Img_url"]),destfile = paste0("image_products/",df[i,'Id'],".jpg"))
for (i in 1:nrow(df)) {
download.file(url=as.character(df[i,"Img_url"]),destfile = paste0("image_products/",df[i,'Id'],".jpg"))
}
download.file(url=as.character(df[i,"Img_url"]),destfile = paste0("image_products/",df[i,'Id'],".jpg"),mode="wb")
